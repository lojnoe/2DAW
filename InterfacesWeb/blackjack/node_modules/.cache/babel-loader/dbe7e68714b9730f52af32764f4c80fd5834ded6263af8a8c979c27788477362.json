{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lojno\\\\Desktop\\\\DAW\\\\2DAW\\\\InterfacesWeb\\\\blackjack\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SUITS = ['♠', '♥', '♦', '♣'];\nconst RANKS = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\nconst App = () => {\n  _s();\n  const [deck, setDeck] = useState([]);\n  const [playerHand, setPlayerHand] = useState([]);\n  const [dealerHand, setDealerHand] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const initializeDeck = () => {\n    let newDeck = [];\n    for (let suit of SUITS) {\n      for (let rank of RANKS) {\n        newDeck.push({\n          suit,\n          rank\n        });\n      }\n    }\n    shuffleDeck(newDeck);\n    setDeck(newDeck);\n  };\n  const shuffleDeck = deckToShuffle => {\n    for (let i = deckToShuffle.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [deckToShuffle[i], deckToShuffle[j]] = [deckToShuffle[j], deckToShuffle[i]];\n    }\n  };\n  const dealCards = () => {\n    setPlayerHand([drawCard(), drawCard()]);\n    setDealerHand([drawCard(), drawCard()]);\n  };\n  const drawCard = () => {\n    if (deck.length === 0) initializeDeck();\n    return deck.pop();\n  };\n  const calculateHandValue = hand => {\n    let value = 0;\n    let numAces = 0;\n    for (let card of hand) {\n      if (card.rank === 'A') numAces++;else if (['J', 'Q', 'K'].includes(card.rank)) value += 10;else value += parseInt(card.rank);\n    }\n    for (let i = 0; i < numAces; i++) {\n      if (value + 11 > 21) value += 1;else value += 11;\n    }\n    return value;\n  };\n  const hit = handSetter => {\n    handSetter(prevHand => [...prevHand, drawCard()]);\n  };\n  const stand = () => {\n    while (calculateHandValue(dealerHand) < 17) {\n      hit(setDealerHand);\n    }\n    endGame();\n  };\n  const endGame = () => {\n    setGameOver(true);\n  };\n  const resetGame = () => {\n    initializeDeck();\n    setPlayerHand([]);\n    setDealerHand([]);\n    setGameOver(false);\n  };\n  const playerScore = calculateHandValue(playerHand);\n  const dealerScore = calculateHandValue(dealerHand);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blackjack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hands\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hand\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Player (\", playerScore, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), playerHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [card.rank, card.suit]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => hit(setPlayerHand),\n          children: \"Hit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stand,\n          children: \"Stand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hand\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Dealer (\", gameOver ? dealerScore : '?', \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), dealerHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: index === 0 && !gameOver ? '?' : `${card.rank}${card.suit}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: playerScore > 21 || dealerScore <= 21 && dealerScore > playerScore ? 'Dealer wins' : 'Player wins'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: dealCards,\n      children: \"Deal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZWf68o5VmrKvSkQYKefTcsQuKeQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SUITS","RANKS","App","_s","deck","setDeck","playerHand","setPlayerHand","dealerHand","setDealerHand","gameOver","setGameOver","initializeDeck","newDeck","suit","rank","push","shuffleDeck","deckToShuffle","i","length","j","Math","floor","random","dealCards","drawCard","pop","calculateHandValue","hand","value","numAces","card","includes","parseInt","hit","handSetter","prevHand","stand","endGame","resetGame","playerScore","dealerScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lojno/Desktop/DAW/2DAW/InterfacesWeb/blackjack/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst SUITS = ['♠', '♥', '♦', '♣'];\nconst RANKS = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n\nconst App = () => {\n  const [deck, setDeck] = useState([]);\n  const [playerHand, setPlayerHand] = useState([]);\n  const [dealerHand, setDealerHand] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n\n  const initializeDeck = () => {\n    let newDeck = [];\n    for (let suit of SUITS) {\n      for (let rank of RANKS) {\n        newDeck.push({ suit, rank });\n      }\n    }\n    shuffleDeck(newDeck);\n    setDeck(newDeck);\n  };\n\n  const shuffleDeck = (deckToShuffle) => {\n    for (let i = deckToShuffle.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [deckToShuffle[i], deckToShuffle[j]] = [deckToShuffle[j], deckToShuffle[i]];\n    }\n  };\n\n  const dealCards = () => {\n    setPlayerHand([drawCard(), drawCard()]);\n    setDealerHand([drawCard(), drawCard()]);\n  };\n\n  const drawCard = () => {\n    if (deck.length === 0) initializeDeck();\n    return deck.pop();\n  };\n\n  const calculateHandValue = (hand) => {\n    let value = 0;\n    let numAces = 0;\n    for (let card of hand) {\n      if (card.rank === 'A') numAces++;\n      else if (['J', 'Q', 'K'].includes(card.rank)) value += 10;\n      else value += parseInt(card.rank);\n    }\n    for (let i = 0; i < numAces; i++) {\n      if (value + 11 > 21) value += 1;\n      else value += 11;\n    }\n    return value;\n  };\n\n  const hit = (handSetter) => {\n    handSetter((prevHand) => [...prevHand, drawCard()]);\n  };\n\n  const stand = () => {\n    while (calculateHandValue(dealerHand) < 17) {\n      hit(setDealerHand);\n    }\n    endGame();\n  };\n\n  const endGame = () => {\n    setGameOver(true);\n  };\n\n  const resetGame = () => {\n    initializeDeck();\n    setPlayerHand([]);\n    setDealerHand([]);\n    setGameOver(false);\n  };\n\n  const playerScore = calculateHandValue(playerHand);\n  const dealerScore = calculateHandValue(dealerHand);\n\n  return (\n    <div className=\"app\">\n      <h1>Blackjack</h1>\n      <div className=\"hands\">\n        <div className=\"hand\">\n          <h2>Player ({playerScore})</h2>\n          {playerHand.map((card, index) => (\n            <div key={index} className=\"card\">\n              {card.rank}\n              {card.suit}\n            </div>\n          ))}\n          <button onClick={() => hit(setPlayerHand)}>Hit</button>\n          <button onClick={stand}>Stand</button>\n        </div>\n        <div className=\"hand\">\n          <h2>Dealer ({gameOver ? dealerScore : '?'})</h2>\n          {dealerHand.map((card, index) => (\n            <div key={index} className=\"card\">\n              {index === 0 && !gameOver ? '?' : `${card.rank}${card.suit}`}\n            </div>\n          ))}\n        </div>\n      </div>\n      {gameOver && (\n        <div className=\"result\">\n          <h2>{playerScore > 21 || (dealerScore <= 21 && dealerScore > playerScore) ? 'Dealer wins' : 'Player wins'}</h2>\n          <button onClick={resetGame}>New Game</button>\n        </div>\n      )}\n      {!gameOver && <button onClick={dealCards}>Deal</button>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}